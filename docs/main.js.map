{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/answer-key/answer-key.component.html","webpack:///./src/app/answer-key/answer-key.component.scss","webpack:///./src/app/answer-key/answer-key.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/index/index.component.html","webpack:///./src/app/index/index.component.scss","webpack:///./src/app/index/index.component.ts","webpack:///./src/app/models/answer-key.model.ts","webpack:///./src/app/molarity/molarity.component.html","webpack:///./src/app/molarity/molarity.component.scss","webpack:///./src/app/molarity/molarity.component.ts","webpack:///./src/app/services/elements.service.ts","webpack:///./src/app/stoichiometry-form/stoichiometry-form.component.html","webpack:///./src/app/stoichiometry-form/stoichiometry-form.component.scss","webpack:///./src/app/stoichiometry-form/stoichiometry-form.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"header\\\">Answer Key</div>\\r\\n<ng-container *ngIf=\\\"answer.displayKey\\\">\\r\\n  <br>\\r\\n  <ng-container *ngIf=\\\"answer.reactant1Coefficient > 1\\\">{{ answer.reactant1Coefficient }}</ng-container>{{ answer.reactant1 }}{{ answer.reactant1Solubility }} + <ng-container *ngIf=\\\"answer.reactant2Coefficient > 1\\\">{{ answer.reactant2Coefficient }}</ng-container>{{ answer.reactant2 }}{{ answer.reactant2Solubility }} => <ng-container *ngIf=\\\"answer.product1Coefficient > 1\\\">{{ answer.product1Coefficient }}</ng-container>{{ answer.product1 }}{{ answer.product1Solubility }} + <ng-container *ngIf=\\\"answer.product2Coefficient > 1\\\">{{ answer.product2Coefficient }}</ng-container>{{ answer.product2 }}{{ answer.product2Solubility }}\\r\\n  <br><br>\\r\\n  mole ratio of {{ answer.product1 }} to {{ answer.reactant1 }} is: {{ answer.moleRatioP1toR1Out }}\\r\\n  <br>\\r\\n  mole ratio of {{ answer.product1 }} to {{ answer.reactant2 }} is: {{ answer.moleRatioP1toR2Out }}\\r\\n  <br>\\r\\n  mole ratio of {{ answer.product2 }} to {{ answer.reactant1 }} is: {{ answer.moleRatioP2toR1Out }}\\r\\n  <br>\\r\\n  mole ratio of {{ answer.product2 }} to {{ answer.reactant2 }} is: {{ answer.moleRatioP2toR2Out }}\\r\\n  <br><br>\\r\\n  The formula weight for {{ answer.product1 }} is: {{ answer.product1WeightOut }}\\r\\n  <br>\\r\\n  The formula weight for {{ answer.product2 }} is: {{ answer.product2WeightOut }}\\r\\n  <br><br>\\r\\n  {{ answer.molesReactant1Out }} moles of {{ answer.reactant1 }} yields {{ answer.molesP2FromR1Out }} moles of {{ answer.product2 }}\\r\\n  <br>\\r\\n  {{ answer.molesReactant1Out }} moles of {{ answer.reactant1 }} yields {{ answer.molesP1FromR1Out }} moles of {{ answer.product1 }}\\r\\n  <br>\\r\\n  {{ answer.molesReactant2Out }} moles of {{ answer.reactant2 }} yields {{ answer.molesP2FromR2Out }} moles of {{ answer.product2 }}\\r\\n  <br>\\r\\n  {{ answer.molesReactant2Out }} moles of {{ answer.reactant2 }} yields {{ answer.molesP1FromR2Out }} moles of {{ answer.product1 }}\\r\\n  <br><br>\\r\\n  The limiting reactant is: {{ answer.limitingReactant }}\\r\\n  <br>\\r\\n  {{ answer.limitingReactant }} yields {{ answer.yieldProduct1Out }} grams of {{ answer.product1 }} and {{ answer.yieldProduct2Out }} grams of {{ answer.product2 }}\\r\\n  <br>\\r\\n  The grams used up is: {{ answer.gramsUsedOut }} g\\r\\n  <br>\\r\\n  The remaining amount of {{ answer.nonLimitingReactant }} is {{ answer.gramsRemainingOut }} g\\r\\n  <br>\\r\\n  the sum of excess plus used reagents ( {{ answer.sumOfAllOut }} g) ought to equal the grams of compound 1 ({{ answer.grams1 }} g) and grams of compound 2 ({{ answer.grams2 }} g)\\r\\n</ng-container>\"","module.exports = \".header {\\n  text-align: center;\\n  font-size: 120%; }\\n\\napp-answer-key {\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYW5zd2VyLWtleS9DOlxcVXNlcnNcXE1hdHRoZXdcXERlc2t0b3BcXEdpdEh1YlxcQ2hlbVF1aXpHZW4vc3JjXFxhcHBcXGFuc3dlci1rZXlcXGFuc3dlci1rZXkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBb0I7RUFDcEIsZUFBZSxFQUFBOztBQUVuQjtFQUNJLGtCQUFrQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvYW5zd2VyLWtleS9hbnN3ZXIta2V5LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRlciB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXIgIDtcclxuICAgIGZvbnQtc2l6ZTogMTIwJTtcclxufVxyXG5hcHAtYW5zd2VyLWtleXtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufSJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { AnswerKey } from '../models/answer-key.model';\r\n\r\n@Component({\r\n  selector: 'app-answer-key',\r\n  templateUrl: './answer-key.component.html',\r\n  styleUrls: ['./answer-key.component.scss']\r\n})\r\nexport class AnswerKeyComponent implements OnInit {\r\n\r\n  // @Input needed so answer can be seen by both components\r\n  // the variable below is needed to conditionally show the HTML answer key element.\r\n  @Input() private answer;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \".form-container {\\n  display: flex;\\n  justify-content: space-around; }\\n\\nbody {\\n  padding-left: 25px; }\\n\\nh1 {\\n  padding-top: 15px;\\n  padding-left: 15px;\\n  padding-bottom: 20px;\\n  height: 50px;\\n  font-size: 3em;\\n  background-color: #1f881f;\\n  border-style: solid;\\n  border-color: black;\\n  background-image: url('gluick.png');\\n  background-repeat: no-repeat;\\n  background-position: left; }\\n\\ndiv {\\n  padding-left: 15px;\\n  padding-right: 10px;\\n  padding-top: 25px;\\n  padding-bottom: 25px;\\n  border-color: black;\\n  border-style: solid;\\n  background-color: #ecdfc6;\\n  font-size: 125%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQzpcXFVzZXJzXFxNYXR0aGV3XFxEZXNrdG9wXFxHaXRIdWJcXENoZW1RdWl6R2VuL3NyY1xcYXBwXFxhcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFhO0VBQ2IsNkJBQTZCLEVBQUE7O0FBRWpDO0VBQ0ksa0JBQWtCLEVBQUE7O0FBRXRCO0VBQ0ksaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixvQkFBb0I7RUFFcEIsWUFBWTtFQUNaLGNBQWM7RUFDZCx5QkFBa0M7RUFDbEMsbUJBQW1CO0VBQ25CLG1CQUFtQjtFQUNuQixtQ0FBaUQ7RUFDakQsNEJBQTRCO0VBQzVCLHlCQUF5QixFQUFBOztBQUc3QjtFQUNJLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsaUJBQWlCO0VBQ2pCLG9CQUFvQjtFQUNwQixtQkFBbUI7RUFDbkIsbUJBQW1CO0VBQ25CLHlCQUFvQztFQUNwQyxlQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcbmJvZHl7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDI1cHg7XHJcbn1cclxuaDEge1xyXG4gICAgcGFkZGluZy10b3A6IDE1cHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcclxuXHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICBmb250LXNpemU6IDNlbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigzMSwgMTM2LCAzMSlcdDtcclxuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XHJcbiAgICBib3JkZXItY29sb3I6IGJsYWNrO1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiYXNzZXRzL2ltYWdlcy9nbHVpY2sucG5nXCIpO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGxlZnQ7XHJcbn1cclxuXHJcbmRpdntcclxuICAgIHBhZGRpbmctbGVmdDogMTVweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbiAgICBwYWRkaW5nLXRvcDogMjVweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAyNXB4O1xyXG4gICAgYm9yZGVyLWNvbG9yOiBibGFjaztcclxuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjM2LCAyMjMsIDE5OCk7XHJcbiAgICBmb250LXNpemU6MTI1JTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { };\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { StoichiometryFormComponent } from './stoichiometry-form/stoichiometry-form.component';\r\nimport { AnswerKeyComponent } from './answer-key/answer-key.component';\r\nimport { ElementsService } from './services/elements.service';\r\nimport { MolarityComponent } from './molarity/molarity.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IndexComponent } from './index/index.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    // this will direct the website's generic URL to our home page, the main app component.\r\n    path: '',\r\n    redirectTo: 'index',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'index',\r\n    component: IndexComponent\r\n  },\r\n  {\r\n    // this will redirect to the stoichiometry form.\r\n    path: 'stoichiometry',\r\n    component: StoichiometryFormComponent\r\n  },\r\n  {\r\n    // this will redirect to the molarity form.\r\n    path: 'molarity',\r\n    component: MolarityComponent\r\n  },\r\n  {\r\n    // this will redirect any unknown URLs to the index page.\r\n    path: '**',\r\n    component: IndexComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    StoichiometryFormComponent,\r\n    AnswerKeyComponent,\r\n    MolarityComponent,\r\n    IndexComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [RouterModule],\r\n  providers: [ElementsService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<h1 align=\\\"center\\\">Chemistry Quiz Key Generator</h1>\\r\\n\\r\\n<br>\\r\\n\\r\\n<div class=\\\"form-container\\\">\\r\\n  <a routerLink=\\\"/stoichiometry\\\"><button class=\\\"btn btn-success pull-right\\\">Stoichiometry Equations</button></a>\\r\\n  <a routerLink=\\\"/molarity\\\"><button class=\\\"btn btn-success pull-right\\\">Molarity Equations</button></a>\\r\\n</div>\\r\\n\\r\\n<footer>\\r\\n  <small><em>Copyright &copy; 2019 Catalyst Quartet</em></small><br>\\r\\n  <script>\\r\\n    document.write(\\\"This page was last modified on: \\\" + document.lastModified)\\r\\n  </script>\\r\\n</footer>\"","module.exports = \".form-container {\\n  display: flex;\\n  justify-content: space-around; }\\n\\nbody {\\n  padding-left: 25px; }\\n\\nh1 {\\n  padding-top: 15px;\\n  padding-left: 15px;\\n  padding-bottom: 20px;\\n  height: 50px;\\n  font-size: 3em;\\n  background-color: #1f881f;\\n  border-style: solid;\\n  border-color: black;\\n  background-image: url('gluick.png');\\n  background-repeat: no-repeat;\\n  background-position: left; }\\n\\ndiv {\\n  padding-left: 15px;\\n  padding-right: 10px;\\n  padding-top: 25px;\\n  padding-bottom: 25px;\\n  border-color: black;\\n  border-style: solid;\\n  background-color: #ecdfc6;\\n  font-size: 125%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW5kZXgvQzpcXFVzZXJzXFxNYXR0aGV3XFxEZXNrdG9wXFxHaXRIdWJcXENoZW1RdWl6R2VuL3NyY1xcYXBwXFxpbmRleFxcaW5kZXguY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFhO0VBQ2IsNkJBQTZCLEVBQUE7O0FBRWpDO0VBQ0ksa0JBQWtCLEVBQUE7O0FBRXRCO0VBQ0ksaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixvQkFBb0I7RUFFcEIsWUFBWTtFQUNaLGNBQWM7RUFDZCx5QkFBa0M7RUFDbEMsbUJBQW1CO0VBQ25CLG1CQUFtQjtFQUNuQixtQ0FBaUQ7RUFDakQsNEJBQTRCO0VBQzVCLHlCQUF5QixFQUFBOztBQUc3QjtFQUNJLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsaUJBQWlCO0VBQ2pCLG9CQUFvQjtFQUNwQixtQkFBbUI7RUFDbkIsbUJBQW1CO0VBQ25CLHlCQUFvQztFQUNwQyxlQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9pbmRleC9pbmRleC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbn1cclxuYm9keXtcclxuICAgIHBhZGRpbmctbGVmdDogMjVweDtcclxufVxyXG5oMSB7XHJcbiAgICBwYWRkaW5nLXRvcDogMTVweDtcclxuICAgIHBhZGRpbmctbGVmdDogMTVweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xyXG5cclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIGZvbnQtc2l6ZTogM2VtO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDMxLCAxMzYsIDMxKVx0O1xyXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICAgIGJvcmRlci1jb2xvcjogYmxhY2s7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJhc3NldHMvaW1hZ2VzL2dsdWljay5wbmdcIik7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogbGVmdDtcclxufVxyXG5cclxuZGl2e1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG4gICAgcGFkZGluZy1yaWdodDogMTBweDtcclxuICAgIHBhZGRpbmctdG9wOiAyNXB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDI1cHg7XHJcbiAgICBib3JkZXItY29sb3I6IGJsYWNrO1xyXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMzYsIDIyMywgMTk4KTtcclxuICAgIGZvbnQtc2l6ZToxMjUlO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.scss']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { tick } from \"@angular/core/testing\";\r\n\r\n// Answer key to be used to hold the data inputed by the professors\r\n// and the answers calculated by the application\r\nexport class AnswerKey {\r\n  \r\n  // Whether or not the output is displayed\r\n  public displayKey: boolean;\r\n\r\n  // Whether or not to get the solubility data\r\n  // This is to avoid trying to calculate using empty objects\r\n  public findSolubility: boolean;\r\n  \r\n  // This variable is the number of significant figures that the app will calculate to\r\n  // It is hard-set to 4 for now, but later will be changed to be variable, most likely input from the form\r\n  public sigFigs: number;\r\n\r\n  // Inputted data\r\n  // Reactant 1\r\n  public anion1: String;\r\n  public anion1Polyatomic: boolean; // stores whether anion1 is polyatomic, used to determine parenthesis\r\n  public cation1: String;\r\n  public cation1Polyatomic: boolean; // stores whether cation1 is polyatomic, used to determine parenthesis\r\n  public grams1: number;\r\n\r\n  // Reactant 2\r\n  public anion2: String;\r\n  public anion2Polyatomic: boolean; // stores whether anion2 is polyatomic, used to determine parenthesis\r\n  public cation2: String;\r\n  public cation2Polyatomic: boolean; // stores whether cation2 is polyatomic, used to determine parenthesis\r\n  public grams2: number;\r\n\r\n  // Calculated Data\r\n  public cation1Weight: number;\r\n  public anion1Weight: number;\r\n  public cation2Weight: number;\r\n  public anion2Weight: number;\r\n\r\n  // Charges of Ions\r\n  public cation1Charge: number;\r\n  public anion1Charge: number;\r\n  public cation2Charge: number;\r\n  public anion2Charge: number;\r\n\r\n  // Coalesced Molecular data (includes substrings, but not the solubility)\r\n  public reactant1: String;\r\n  public reactant2: String;\r\n  public product1: String;\r\n  public product2: String;\r\n\r\n  // Reactant Subscripts\r\n  public reactant1AnionSubscript: number;\r\n  public reactant1CationSubscript: number;\r\n  public reactant2AnionSubscript: number;\r\n  public reactant2CationSubscript: number;\r\n  \r\n  // Product Subscripts\r\n  public product1AnionSubscript: number;\r\n  public product1CationSubscript: number;\r\n  public product2AnionSubscript: number;\r\n  public product2CationSubscript: number;\r\n  \r\n  // Reactant Coefficients\r\n  public reactant1Coefficient: number;\r\n  public reactant2Coefficient: number;\r\n\r\n  // Product Coefficients\r\n  public product1Coefficient: number;\r\n  public product2Coefficient: number;\r\n\r\n  // Formula Weights (Molar Mass)\r\n  // Reactants\r\n  public reactant1Weight: number;\r\n  public reactant2Weight: number;\r\n\r\n  // Products\r\n  public product1Weight: number;\r\n  public product2Weight: number;\r\n\r\n  // Mole Ratios of Products to Reactants\r\n  public moleRatioP1toR1: number;\r\n  public moleRatioP1toR2: number;\r\n  public moleRatioP2toR1: number;\r\n  public moleRatioP2toR2: number;\r\n\r\n  // Reactant Mole Ratios, used in calculations and displayed.\r\n  public moleRatioR1toR2: number;\r\n  public moleRatioR2toR1: number;\r\n\r\n  // The limiting reactant of the reaction.  This is displayed and determines which numbers in other parts are displayed.\r\n  public limitingReactant: String;\r\n  public nonLimitingReactant: String;\r\n\r\n  // Yield, based on limiting reactant\r\n  public yieldProduct1: number;\r\n  public yieldProduct2: number;\r\n\r\n  // Grams, dependent on limiting reactant\r\n  public gramsUsed: number;\r\n  public gramsRemaining: number;\r\n\r\n  // Sum of all remaining masses\r\n  public sumOfAll: number;\r\n\r\n  // This is the moles of each item.  This is displayed and used in calculations.\r\n  // Reactants\r\n  public molesReactant1: number;\r\n  public molesReactant2: number;\r\n  \r\n  // Products\r\n  public molesP1FromR1: number;\r\n  public molesP2FromR1: number;\r\n  public molesP1FromR2: number;\r\n  public molesP2FromR2: number;\r\n\r\n  // Solubility data input\r\n  public cation1SolubilityData: any [];\r\n  public cation2SolubilityData: any [];\r\n\r\n  // Actual saved solubility data, used for output onto the html\r\n  public reactant1Solubility: String;\r\n  public reactant2Solubility: String;\r\n  public product1Solubility: String;\r\n  public product2Solubility: String;\r\n\r\n  // Output Only Data\r\n  // This data is only saved so that it can be output.  \r\n  // It utilizes the toPrecision function, so it outputs as a string, and cannot be stored as a number.\r\n  \r\n  // Mole Ratios of Products to Reactants\r\n  public moleRatioP1toR1Out: String;\r\n  public moleRatioP1toR2Out: String;\r\n  public moleRatioP2toR1Out: String;\r\n  public moleRatioP2toR2Out: String;\r\n\r\n  // Formula Weights (Molar Mass)\r\n  // Products\r\n  public product1WeightOut: String;\r\n  public product2WeightOut: String;\r\n\r\n  // This is the moles of each item.  This is displayed and used in calculations.\r\n  // Reactants\r\n  public molesReactant1Out: String;\r\n  public molesReactant2Out: String;\r\n\r\n  // Products\r\n  public molesP1FromR1Out: String;\r\n  public molesP2FromR1Out: String;\r\n  public molesP1FromR2Out: String;\r\n  public molesP2FromR2Out: String;\r\n\r\n  // Grams, dependent on limiting reactant\r\n  public gramsUsedOut: String;\r\n  public gramsRemainingOut: String;\r\n\r\n  // Sum of all remaining masses\r\n  public sumOfAllOut: String;\r\n\r\n  // Yield, based on limiting reactant\r\n  public yieldProduct1Out: String;\r\n  public yieldProduct2Out: String;\r\n\r\n  // Runs at the beginning (obviously)\r\n  constructor() {\r\n\r\n    // Make sure the display is off by default\r\n    this.displayKey = false;\r\n\r\n    // Display the solubility when loaded by default\r\n    this.findSolubility = true;\r\n\r\n    // Default the Coefficients to 1\r\n    this.reactant1Coefficient = 1;\r\n    this.reactant2Coefficient = 1;\r\n    this.product1Coefficient = 1;\r\n    this.product2Coefficient = 1;\r\n\r\n    // Default the sigFigs to 4\r\n    this.sigFigs = 4;\r\n  }\r\n\r\n  // Sets the subscripts of the elements\r\n  public setSubScript(subscript: number): String {\r\n    switch (subscript) {\r\n      case 1: // if the subscript is 1\r\n        return ''; // send back a blank field\r\n      case 2: // if the subscript is 2\r\n        return '\\u2082'; // send back the unicode for subscript 2\r\n      case 3: // if the subscript is 3\r\n        return '\\u2083'; // send back the unicode for subscript 3\r\n      default: // otherwise\r\n        return '!!!!! ERROR: SUBSCRIPT VALUE NOT HANDLED !!!!!'; // send back an error so that we can add more cases (potentially)\r\n    }\r\n  }\r\n\r\n  // Groups the cations, anions, and subscripts to create the molecules as a string\r\n  public setMolecules(): void {\r\n\r\n    // This block determines the correct way to load Reactant 1\r\n    if(this.cation1Polyatomic && (this.reactant1CationSubscript > 1)) {\r\n      // If cation1 is polyatomic and has a reactant 1 subscript of greater than 1...\r\n      if(this.anion1Polyatomic && (this.reactant1AnionSubscript > 1)) {\r\n        // and anion1 is polyatomic and has a reactant 1 subscript greater than 1...\r\n\r\n        // add parenthesis around all ions\r\n\r\n        this.reactant1 = '(' + this.cation1 + ')' + this.setSubScript(this.reactant1CationSubscript) + \r\n          '(' + this.anion1 + ')' + this.setSubScript(this.reactant1AnionSubscript);\r\n      } else {\r\n        // and anion1 isn't polyatomic OR doesn't have a reactant1 subscript greather than 1...\r\n\r\n        // only put parenthesis around the cation\r\n        this.reactant1 = '(' + this.cation1 + ')' + this.setSubScript(this.reactant1CationSubscript) + \r\n          this.anion1 + this.setSubScript(this.reactant1AnionSubscript);\r\n      }\r\n    } else {\r\n      // If cation1 isn't plyatomic OR doesn't have a reactant 1 subscript greater than 1...\r\n      if(this.anion1Polyatomic && (this.reactant1AnionSubscript > 1)) {\r\n        // and anion1 is polyatomic and has a reactant 1 subscript greater than 1...\r\n\r\n        // add parenthesis around all ions\r\n\r\n        this.reactant1 = '' + this.cation1 + this.setSubScript(this.reactant1CationSubscript) + \r\n          '(' + this.anion1 + ')' + this.setSubScript(this.reactant1AnionSubscript);\r\n      } else {\r\n        // and anion1 isn't polyatomic OR doesn't have a reactant1 subscript greather than 1...\r\n\r\n        // only put parenthesis around the cation\r\n        this.reactant1 = '' + this.cation1 + this.setSubScript(this.reactant1CationSubscript) + \r\n          this.anion1 + this.setSubScript(this.reactant1AnionSubscript);\r\n      }\r\n    }\r\n    \r\n    // This block determines the correct way to load Reactant 2\r\n    if(this.cation2Polyatomic && (this.reactant2CationSubscript > 1)) {\r\n      // If cation2 is polyatomic and has a reactant 2 subscript of greater than 1...\r\n      if(this.anion2Polyatomic && (this.reactant2AnionSubscript > 1)) {\r\n        // and anion2 is polyatomic and has a reactant 2 subscript greater than 1...\r\n\r\n        // add parenthesis around all ions\r\n        this.reactant2 = '(' + this.cation2 + ')' + this.setSubScript(this.reactant2CationSubscript) + \r\n          '(' + this.anion2 + ')' + this.setSubScript(this.reactant2AnionSubscript);\r\n      } else {\r\n        // and anion2 isn't polyatomic OR doesn't have a reactant 2 subscript greather than 1...\r\n\r\n        // only put parenthesis around the cation\r\n        this.reactant2 = '(' + this.cation2 + ')' + this.setSubScript(this.reactant2CationSubscript) + \r\n          this.anion2 + this.setSubScript(this.reactant2AnionSubscript);\r\n      }\r\n    } else {\r\n      // If cation2 isn't plyatomic OR doesn't have a reactant 2 subscript greater than 1...\r\n      if(this.anion2Polyatomic && (this.reactant2AnionSubscript > 1)) {\r\n        // and anion2 is polyatomic and has a reactant 2 subscript greater than 1...\r\n\r\n        // add parenthesis around all ions\r\n        this.reactant2 = '' + this.cation2 + this.setSubScript(this.reactant2CationSubscript) + \r\n          '(' + this.anion2 + ')' + this.setSubScript(this.reactant2AnionSubscript);\r\n      } else {\r\n        // and anion2 isn't polyatomic OR doesn't have a reactant 2 subscript greather than 1...\r\n\r\n        // only put parenthesis around the cation\r\n        this.reactant2 = '' + this.cation2 + this.setSubScript(this.reactant2CationSubscript) + \r\n          this.anion2 + this.setSubScript(this.reactant2AnionSubscript);\r\n      }\r\n    }\r\n\r\n    // This block determines the correct way to load Product 1\r\n    if(this.cation1Polyatomic && (this.product1CationSubscript > 1)) {\r\n      // If cation1 is polyatomic and has a product 1 subscript of greater than 1...\r\n      if(this.anion2Polyatomic && (this.product1AnionSubscript > 1)) {\r\n        // and anion2 is polyatomic and has a product 1 subscript greater than 1...\r\n\r\n        // add parenthesis around all ions\r\n        this.product1 = '(' + this.cation1 + ')' + this.setSubScript(this.product1CationSubscript) + \r\n          '(' + this.anion2 + ')' + this.setSubScript(this.product1AnionSubscript);\r\n      } else {\r\n        // and anion2 isn't polyatomic OR doesn't have a product 1 subscript greather than 1...\r\n\r\n        // only put parenthesis around the cation\r\n        this.product1 = '(' + this.cation1 + ')' + this.setSubScript(this.product1CationSubscript) + \r\n          this.anion2 + this.setSubScript(this.product1AnionSubscript);\r\n      }\r\n    } else {\r\n      // If cation1 isn't plyatomic OR doesn't have a product 1 subscript greater than 1...\r\n      if(this.anion2Polyatomic && (this.product1AnionSubscript > 1)) {\r\n        // and anion2 is polyatomic and has a product 1 subscript greater than 1...\r\n\r\n        // add parenthesis around all ions\r\n        this.product1 = '' + this.cation1 + this.setSubScript(this.product1CationSubscript) + \r\n          '(' + this.anion2 + ')' + this.setSubScript(this.product1AnionSubscript);\r\n      } else {\r\n        // and anion2 isn't polyatomic OR doesn't have a product 1 subscript greather than 1...\r\n\r\n        // only put parenthesis around the cation\r\n        this.product1 = '' + this.cation1 + this.setSubScript(this.product1CationSubscript) + \r\n          this.anion2 + this.setSubScript(this.product1AnionSubscript);\r\n      }\r\n    }\r\n\r\n    // This block determines the correct way to load Product 2\r\n    if(this.cation2Polyatomic && (this.product2CationSubscript > 1)) {\r\n      // If cation2 is polyatomic and has a product 2 subscript of greater than 1...\r\n      if(this.anion1Polyatomic && (this.product2AnionSubscript > 1)) {\r\n        // and anion1 is polyatomic and has a product 2 subscript greater than 1...\r\n\r\n        // add parenthesis around all ions\r\n        this.product2 = '(' + this.cation2 + ')' + this.setSubScript(this.product2CationSubscript) + \r\n          '(' + this.anion1 + ')' + this.setSubScript(this.product2AnionSubscript);\r\n      } else {\r\n        // and anion1 isn't polyatomic OR doesn't have a product 2 subscript greather than 1...\r\n\r\n        // only put parenthesis around the cation\r\n        this.product2 = '(' + this.cation2 + ')' + this.setSubScript(this.product2CationSubscript) + \r\n          this.anion1 + this.setSubScript(this.product2AnionSubscript);\r\n      }\r\n    } else {\r\n      // If cation2 isn't plyatomic OR doesn't have a product 2 subscript greater than 1...\r\n      if(this.anion1Polyatomic && (this.product2AnionSubscript > 1)) {\r\n        // and anion1 is polyatomic and has a product 2 subscript greater than 1...\r\n\r\n        // add parenthesis around all ions\r\n        this.product2 = '' + this.cation2 + this.setSubScript(this.product2CationSubscript) + \r\n          '(' + this.anion1 + ')' + this.setSubScript(this.product2AnionSubscript);\r\n      } else {\r\n        // and anion1 isn't polyatomic OR doesn't have a product 2 subscript greather than 1...\r\n\r\n        // only put parenthesis around the cation\r\n        this.product2 = '' + this.cation2 + this.setSubScript(this.product2CationSubscript) + \r\n          this.anion1 + this.setSubScript(this.product2AnionSubscript);\r\n      }\r\n    }\r\n    \r\n    /* Original code (without the polyatomic parenthesis)\r\n    this.reactant1 = '' + this.cation1 + this.setSubScript(this.reactant1CationSubscript) + this.anion1 +\r\n      this.setSubScript(this.reactant1AnionSubscript);\r\n\r\n    this.reactant2 = '' + this.cation2 + this.setSubScript(this.reactant2CationSubscript) + this.anion2 +\r\n      this.setSubScript(this.reactant2AnionSubscript);\r\n    \r\n    this.product1 = '' + this.cation1 + this.setSubScript(this.product1CationSubscript) + this.anion2 +\r\n      this.setSubScript(this.product1AnionSubscript);\r\n\r\n    this.product2 = '' + this.cation2 + this.setSubScript(this.product2CationSubscript) + this.anion1 +\r\n      this.setSubScript(this.product2AnionSubscript);\r\n    */\r\n  }\r\n\r\n  // Calulates formula weights based on charges of opposite bonded element\r\n  public calculateFormulaWeight(): void {\r\n    \r\n    this.product1Weight = (this.cation1Weight * this.product1CationSubscript) +\r\n      (this.anion2Weight * this.product1AnionSubscript);\r\n\r\n    this.product2Weight = (this.cation2Weight * this.product2CationSubscript) +\r\n      (this.anion1Weight * this.product2AnionSubscript);\r\n\r\n    this.reactant1Weight = (this.anion1Weight * this.reactant1AnionSubscript) + \r\n      (this.cation1Weight * this.reactant1CationSubscript);\r\n\r\n    this.reactant2Weight = (this.anion2Weight * this.reactant2AnionSubscript) + \r\n      (this.cation2Weight * this.reactant2CationSubscript);\r\n\r\n    // Set the String output values for display with the correct number of sigfigs\r\n    this.product1WeightOut = this.precision(this.product1Weight);\r\n    this.product2WeightOut = this.precision(this.product2Weight);\r\n  }\r\n\r\n  // Determnes the subscript based on opposing charges\r\n  public determineSubscript(): void {\r\n    \r\n    this.reactant1AnionSubscript = (this.cation1Charge === Math.abs(this.anion1Charge)) ?\r\n      1 : this.cation1Charge;\r\n\r\n    this.reactant1CationSubscript = (this.cation1Charge === Math.abs(this.anion1Charge)) ?\r\n      1 : Math.abs(this.anion1Charge);\r\n\r\n    this.reactant2AnionSubscript = (this.cation2Charge === Math.abs(this.anion2Charge)) ?\r\n      1 : this.cation2Charge;\r\n\r\n    this.reactant2CationSubscript = (this.cation2Charge === Math.abs(this.anion2Charge)) ?\r\n      1 : Math.abs(this.anion2Charge);\r\n\r\n    this.product1AnionSubscript = (this.cation1Charge === Math.abs(this.anion2Charge)) ?\r\n      1 : this.cation1Charge;\r\n\r\n    this.product1CationSubscript = (this.cation1Charge === Math.abs(this.anion2Charge)) ?\r\n      1 : Math.abs(this.anion2Charge);\r\n\r\n    this.product2AnionSubscript = (this.cation2Charge === Math.abs(this.anion1Charge)) ?\r\n      1 : this.cation2Charge;\r\n\r\n    this.product2CationSubscript = (this.cation2Charge === Math.abs(this.anion1Charge)) ?\r\n      1 : Math.abs(this.anion1Charge);\r\n  }\r\n\r\n  // Balances equation based on subscripts and default coefficients\r\n  public balanceEquation(): void {\r\n    \r\n    /* Debug, add/remove the * / here to enable/disable the code -> * /\r\n    console.log(\"The following data is printed for debug purposes, please disable this block in answer-key.model.ts if you are not debugging the system.\");\r\n    console.log(\"Began Balance Equation\");\r\n    /* */\r\n\r\n    // Default the Coefficients to 1\r\n    this.reactant1Coefficient = 1;\r\n    this.reactant2Coefficient = 1;\r\n    this.product1Coefficient = 1;\r\n    this.product2Coefficient = 1;\r\n    \r\n    // Determines the amount of cations and anions in each molecule based on subscript and coefficient\r\n    // This keeps track of how many there are in each molecule, and checks that they all are the same.\r\n    let reactant1CationAmount: number = this.reactant1CationSubscript * this.reactant1Coefficient;\r\n    let product1CationAmount: number = this.product1CationSubscript * this.product1Coefficient;\r\n    let reactant1AnionAmount: number = this.reactant1AnionSubscript * this.reactant1Coefficient;\r\n    let product1AnionAmount: number = this.product1AnionSubscript * this.product1Coefficient;\r\n    let reactant2CationAmount: number = this.reactant2CationSubscript * this.reactant2Coefficient;\r\n    let product2CationAmount: number = this.product2CationSubscript * this.product2Coefficient;\r\n    let reactant2AnionAmount: number = this.reactant2AnionSubscript * this.reactant2Coefficient;\r\n    let product2AnionAmount: number = this.product2AnionSubscript * this.product2Coefficient;\r\n\r\n    /* Debug, add/remove the * / here to enable/disable the code -> * /\r\n    console.log(\"The following data is printed for debug purposes, please disable this block in answer-key.model.ts if you are not debugging the system.\");\r\n    console.log(\"Finished assigning variables and beginning while loop\");\r\n    */\r\n    let x: number = 0;\r\n   \r\n\r\n    // While loops tests that the amounts on either side of the equation are equal\r\n    while (\r\n      reactant1CationAmount !== product1CationAmount ||\r\n      reactant1AnionAmount !== product2AnionAmount ||\r\n      reactant2CationAmount !== product2CationAmount || \r\n      reactant2AnionAmount !== product1AnionAmount\r\n    ) {\r\n\r\n      /* Debug, add/remove the here to enable/disable the code ->\r\n      console.log(\"The following data is printed for debug purposes, please disable this block in answer-key.model.ts if you are not debugging the system.\");\r\n      *//*\r\n      if (x <= 10) {\r\n      console.log(\"Beginning loop itteration \" + x);\r\n      console.log(\"Stored Data: \");\r\n      console.log(\"reactant1CationAmount: \" + reactant1CationAmount);\r\n      console.log(\"product1CationAmount: \" + product1CationAmount);\r\n      console.log(\"reactant2CationAmount: \" + reactant2CationAmount);\r\n      console.log(\"product2CationAmount: \" + product2CationAmount);\r\n      console.log(\"reactant1AnionAmount: \" + reactant1AnionAmount);\r\n      console.log(\"product1AnionAmount: \" + product1AnionAmount);\r\n      console.log(\"reactant2AnionAmount: \" + reactant2AnionAmount);\r\n      console.log(\"product2AnionAmount: \" + product2AnionAmount);\r\n      x++;\r\n      }\r\n      else\r\n        break;\r\n      */\r\n      \r\n\r\n      // Tests if cation amounts are the same\r\n      if (reactant1CationAmount !== product1CationAmount) {\r\n\r\n        // If not the same test which is bigger and increase the appropriate coefficient\r\n        if (reactant1CationAmount > product1CationAmount) {\r\n          this.product1Coefficient *= reactant1CationAmount / product1CationAmount;\r\n          product1CationAmount = this.product1CationSubscript * this.product1Coefficient;\r\n          product1AnionAmount = this.product1AnionSubscript * this.product1Coefficient;\r\n        } else {\r\n          this.reactant1Coefficient *= product1CationAmount / reactant1CationAmount;\r\n          reactant1CationAmount = this.reactant1CationSubscript * this.reactant1Coefficient;\r\n          reactant1AnionAmount = this.reactant1AnionSubscript * this.reactant1Coefficient;\r\n        }\r\n      }\r\n      // Tests if anion amounts are the same\r\n      if (reactant1AnionAmount !== product2AnionAmount) {\r\n        // If not the same test which is bigger and increase the appropriate coefficient\r\n        if (reactant1AnionAmount > product2AnionAmount) {\r\n          this.product2Coefficient *= reactant1AnionAmount / product2AnionAmount;\r\n          product2CationAmount = this.product2CationSubscript * this.product2Coefficient;\r\n          product2AnionAmount = this.product2AnionSubscript * this.product2Coefficient;\r\n        } else {\r\n          this.reactant1Coefficient *= product1CationAmount / reactant1CationAmount;\r\n          reactant1CationAmount = this.reactant1CationSubscript * this.reactant1Coefficient;\r\n          reactant1AnionAmount = this.reactant1AnionSubscript * this.reactant1Coefficient;\r\n        }\r\n      }\r\n      // Tests if cation amounts are the same\r\n      if (reactant2CationAmount !== product2CationAmount) {\r\n        // If not the same test which is bigger and increase the appropriate coefficient\r\n        if (reactant2CationAmount > product2CationAmount) {\r\n          this.product2Coefficient *= reactant2CationAmount / product2CationAmount;\r\n          product2CationAmount = this.reactant2CationSubscript * this.reactant2Coefficient;\r\n          product2AnionAmount = this.product2AnionSubscript * this.product2Coefficient;\r\n        } else {\r\n          this.reactant2Coefficient *= product2CationAmount / reactant2CationAmount;\r\n          reactant2CationAmount = this.reactant2CationSubscript * this.reactant2Coefficient;\r\n          reactant2AnionAmount = this.reactant2AnionSubscript * this.reactant2Coefficient;\r\n        }\r\n      }\r\n      // Tests if anion amounts are the same\r\n      if (reactant2AnionAmount !== product1AnionAmount) {\r\n        // If not the same test which is bigger and increase the appropriate coefficient\r\n        if (reactant2AnionAmount > product1AnionAmount) {\r\n          this.product1Coefficient *= reactant2AnionAmount / product1AnionAmount;\r\n          product1CationAmount = this.product1CationSubscript * this.product1Coefficient;\r\n          product1AnionAmount = this.product1AnionSubscript * this.product1Coefficient;\r\n        } else {\r\n          this.reactant2Coefficient *= product1AnionAmount / reactant2AnionAmount;\r\n          reactant2CationAmount = this.reactant2CationSubscript * this.reactant2Coefficient;\r\n          reactant2AnionAmount = this.reactant2AnionSubscript * this.reactant2Coefficient;\r\n        }\r\n      } \r\n\r\n      /* Debug, add/remove the * / here to enable/disable the code -> * /\r\n      console.log(\"The following data is printed for debug purposes, please disable this block in answer-key.model.ts if you are not debugging the system.\");\r\n      console.log(\"Finished loop itteration \" + x);\r\n      /* */\r\n    }\r\n\r\n    /* Debug, add/remove the * / here to enable/disable the code -> * /\r\n    console.log(\"The following data is printed for debug purposes, please disable this block in answer-key.model.ts if you are not debugging the system.\");\r\n    console.log(\"Finished main loop and beginning fixDecimalCoefficients\");\r\n    /* */\r\n    /* Debug, add/remove the * / here to enable/disable the code -> * /\r\n    console.log(\"End Loop\");\r\n    console.log(\"Stored Data: \");\r\n    console.log(\"reactant1CationAmount: \" + reactant1CationAmount);\r\n    console.log(\"product1CationAmount: \" + product1CationAmount);\r\n    console.log(\"reactant2CationAmount: \" + reactant2CationAmount);\r\n    console.log(\"product2CationAmount: \" + product2CationAmount);\r\n    console.log(\"reactant1AnionAmount: \" + reactant1AnionAmount);\r\n    console.log(\"product1AnionAmount: \" + product1AnionAmount);\r\n    console.log(\"reactant2AnionAmount: \" + reactant2AnionAmount);\r\n    console.log(\"product2AnionAmount: \" + product2AnionAmount);\r\n    /* */\r\n    // As there may be decimal coefficients, this needs to be corrected right after balancing.\r\n    this.fixDecimalCoefficients();\r\n  }\r\n\r\n  // This method runs after the balanceEquation() method\r\n  // It corrects the possibility of decimal coefficients\r\n  public fixDecimalCoefficients(): void {\r\n\r\n    // This number will store the decimal to be divided by\r\n    let coefficientDecimal: number;\r\n\r\n    // Runs for as long as there is a coefficient that isn't an integer (should only be once though)\r\n    if (\r\n      (this.reactant1Coefficient % 1) !== 0 ||\r\n      (this.reactant2Coefficient % 1) !== 0 ||\r\n      (this.product1Coefficient % 1) !== 0 ||\r\n      (this.product2Coefficient % 1) !== 0\r\n    ) {\r\n\r\n      // If reactant1Coefficient has a decimal\r\n      if((coefficientDecimal = this.reactant1Coefficient % 1) !== 0) {\r\n\r\n        // divide all Coefficients by the decimal (effectively multiplying by the inverse of the decimal)\r\n        this.reactant1Coefficient /= coefficientDecimal;\r\n        this.reactant2Coefficient /= coefficientDecimal;\r\n        this.product1Coefficient /= coefficientDecimal;\r\n        this.product2Coefficient /= coefficientDecimal;\r\n      }\r\n\r\n      // If reactant1Coefficient has a decimal\r\n      if((coefficientDecimal = this.reactant2Coefficient % 1) !== 0) {\r\n\r\n        // divide all Coefficients by the decimal (effectively multiplying by the inverse of the decimal)\r\n        this.reactant1Coefficient /= coefficientDecimal;\r\n        this.reactant2Coefficient /= coefficientDecimal;\r\n        this.product1Coefficient /= coefficientDecimal;\r\n        this.product2Coefficient /= coefficientDecimal;\r\n      }\r\n\r\n      // If reactant1Coefficient has a decimal\r\n      if((coefficientDecimal = this.product1Coefficient % 1) !== 0) {\r\n\r\n        // divide all Coefficients by the decimal (effectively multiplying by the inverse of the decimal)\r\n        this.reactant1Coefficient /= coefficientDecimal;\r\n        this.reactant2Coefficient /= coefficientDecimal;\r\n        this.product1Coefficient /= coefficientDecimal;\r\n        this.product2Coefficient /= coefficientDecimal;\r\n      }\r\n\r\n      // If reactant1Coefficient has a decimal\r\n      if((coefficientDecimal = this.product2Coefficient % 1) !== 0) {\r\n\r\n        // divide all Coefficients by the decimal (effectively multiplying by the inverse of the decimal)\r\n        this.reactant1Coefficient /= coefficientDecimal;\r\n        this.reactant2Coefficient /= coefficientDecimal;\r\n        this.product1Coefficient /= coefficientDecimal;\r\n        this.product2Coefficient /= coefficientDecimal;\r\n      }\r\n    }\r\n\r\n    this.simplifyCoefficients();\r\n  }\r\n\r\n  // This method takes coefficients like 2 2 4 2 and simplifies them to coefficients like 1 1 2 1\r\n  public simplifyCoefficients(): void {\r\n\r\n    if (\r\n      this.reactant1Coefficient % this.product2Coefficient === 0 && \r\n      this.reactant2Coefficient % this.product2Coefficient === 0 && \r\n      this.product1Coefficient % this.product2Coefficient === 0\r\n    ) { // Checking everything against product 2's coefficient\r\n\r\n      this.reactant1Coefficient /= this.product2Coefficient;\r\n      this.reactant2Coefficient /= this.product2Coefficient;\r\n      this.product1Coefficient /= this.product2Coefficient;\r\n      this.product2Coefficient /= this.product2Coefficient;\r\n\r\n    } else if (\r\n      this.reactant1Coefficient % this.product1Coefficient === 0 &&\r\n      this.reactant2Coefficient % this.product1Coefficient === 0 &&\r\n      this.product2Coefficient % this.product1Coefficient === 0\r\n    ) { // Checking everything against product 1's coefficient\r\n\r\n      this.reactant1Coefficient /= this.product1Coefficient;\r\n      this.reactant2Coefficient /= this.product1Coefficient;\r\n      this.product1Coefficient /= this.product1Coefficient;\r\n      this.product2Coefficient /= this.product1Coefficient;\r\n      \r\n    } else if (\r\n      this.reactant1Coefficient % this.reactant2Coefficient === 0 && \r\n      this.product1Coefficient % this.reactant2Coefficient === 0 &&\r\n      this.product2Coefficient % this.reactant2Coefficient === 0\r\n    ) { // Checking everything against reactant 2's coefficient\r\n\r\n      this.reactant1Coefficient /= this.reactant2Coefficient;\r\n      this.reactant2Coefficient /= this.reactant2Coefficient;\r\n      this.product1Coefficient /= this.reactant2Coefficient;\r\n      this.product2Coefficient /= this.reactant2Coefficient;\r\n      \r\n    } else if (\r\n      this.reactant2Coefficient % this.reactant1Coefficient === 0 && \r\n      this.product1Coefficient % this.reactant1Coefficient === 0 &&\r\n      this.product2Coefficient % this.reactant1Coefficient === 0\r\n    ) { // Checking everything against reactant 1's coefficient\r\n\r\n      this.reactant1Coefficient /= this.reactant1Coefficient;\r\n      this.reactant2Coefficient /= this.reactant1Coefficient;\r\n      this.product1Coefficient /= this.reactant1Coefficient;\r\n      this.product2Coefficient /= this.reactant1Coefficient;\r\n      \r\n    } else { \r\n\r\n      // DO NOTHING, CAUSE IT'S SIMPLIFIED AS IS\r\n    }\r\n  }\r\n\r\n  // This method calculates the mole rations of the products to the reactants\r\n  public calculateMoleRatios(): void {\r\n\r\n    // Since the coefficients are the moles of each molecule present in the reaction, this works\r\n    this.moleRatioP1toR1 = this.product1Coefficient / this.reactant1Coefficient;\r\n    this.moleRatioP1toR2 = this.product1Coefficient / this.reactant2Coefficient;\r\n    this.moleRatioP2toR1 = this.product2Coefficient / this.reactant1Coefficient;\r\n    this.moleRatioP2toR2 = this.product2Coefficient / this.reactant2Coefficient;\r\n    \r\n    // Set the String outputs of them so that they can have the correct number of sigfigs:\r\n    this.moleRatioP1toR1Out = this.precision(this.moleRatioP1toR1);\r\n    this.moleRatioP1toR2Out = this.precision(this.moleRatioP1toR2);\r\n    this.moleRatioP2toR1Out = this.precision(this.moleRatioP2toR1);\r\n    this.moleRatioP2toR2Out = this.precision(this.moleRatioP2toR2);\r\n\r\n    // These are the ratios between reactants\r\n    this.moleRatioR1toR2 = this.reactant1Coefficient / this.reactant2Coefficient;\r\n    this.moleRatioR2toR1 = this.reactant2Coefficient / this.reactant1Coefficient;\r\n  }\r\n\r\n  // Rewrite to modularize the methods more.  \r\n  // Retrieves each ion's charge and saves it\r\n  public setCharges(): void {\r\n\r\n    // Charge data, hard coded.  Please adapt to call data from backend\r\n    const charge_table = {Li: 1, Na: 1, K: 1, NH4: 1, Mg: 2, Ca: 2, Ba : 2, Zn: 2, 'Fe(II)': 2,\r\n    Cu: 2, Al: 3, 'Fe(III)': 3, Pb: 2, Ag : 1, Br : -1, I: -1, Cl: -1, NO3 : -1, CO3 : -2, ClO3 : -1,\r\n    OH : -1, O2: -2, PO4: -3, SO4: -2, Cr2O7: -2};\r\n\r\n    // Set the charge variables based on the data provided\r\n    this.cation1Charge = charge_table[this.cation1 + ''];\r\n    this.cation2Charge = charge_table[this.cation2 + ''];\r\n    this.anion1Charge = charge_table[this.anion1 + ''];\r\n    this.anion2Charge = charge_table[this.anion2 + ''];\r\n  }\r\n\r\n  // This method is meant to function like his reaction_solubility(a) function\r\n  // It generates each item's solubility information.\r\n  public solubilityGeneration() {\r\n\r\n    /* Debug add/remove the space in the * / to enable/disable the debug code -> * /\r\n    console.log(\"solubilityGeneration() Began\");\r\n    console.log(this.findSolubility);\r\n    console.log(\"Cation1 \" + this.cation1SolubilityData);\r\n    console.log(\"Cation2 \" + this.cation2SolubilityData);\r\n    /* */\r\n\r\n    if (this.findSolubility) { // If the data was loaded, then figure out each molecule's solubility\r\n\r\n      /*\r\n      0 = aqueous = (aq)\r\n      1 = solid = (s)\r\n      */\r\n\r\n      // Reactant 1\r\n      if (this.cation1SolubilityData[this.anion1 + ''] === 1) {\r\n        this.reactant1Solubility = \"(s)\";\r\n      } else if (this.cation1SolubilityData[this.anion1 + ''] === 0) {\r\n        this.reactant1Solubility = \"(aq)\";\r\n      } else {\r\n        this.reactant1Solubility = \"?\";\r\n      }\r\n\r\n      // Reactant 2\r\n      if (this.cation2SolubilityData[this.anion2 + ''] === 1) {\r\n        this.reactant2Solubility = \"(s)\";\r\n      } else if (this.cation2SolubilityData[this.anion2 + ''] === 0) {\r\n        this.reactant2Solubility = \"(aq)\";\r\n      } else {\r\n        this.reactant2Solubility = \"?\";\r\n      }\r\n\r\n      // Product 1\r\n      if (this.cation1SolubilityData[this.anion2 + ''] === 1) {\r\n        this.product1Solubility = \"(s)\";\r\n      } else if (this.cation1SolubilityData[this.anion2 + ''] === 0) {\r\n        this.product1Solubility = \"(aq)\";\r\n      } else {\r\n        this.product1Solubility = \"?\";\r\n      }\r\n\r\n      // Product 2\r\n      if (this.cation2SolubilityData[this.anion1 + ''] === 1) {\r\n        this.product2Solubility = \"(s)\";\r\n      } else if (this.cation2SolubilityData[this.anion1 + ''] === 0) {\r\n        this.product2Solubility = \"(aq)\";\r\n      } else {\r\n        this.product2Solubility = \"?\";\r\n      }\r\n    } else { // Otherwise, set the solubility to empty values to avoid issues (probably)\r\n\r\n      this.reactant1Solubility = '';\r\n      this.reactant2Solubility = '';\r\n      this.product1Solubility = '';\r\n      this.product2Solubility = '';\r\n    }\r\n  }\r\n\r\n  // This method calculates the moles of each and determines the limiting reactant\r\n  public determineLimitingReactant(): void {\r\n\r\n    // check if product moles from R1 are less than R2\r\n    if (\r\n      this.molesP1FromR1 < this.molesP1FromR2 && \r\n      this.molesP2FromR1 < this.molesP2FromR2\r\n    ) { // if so\r\n\r\n      // Calculate the mass yield\r\n      this.yieldProduct1 = this.molesP1FromR1 * this.product1Weight;\r\n      this.yieldProduct2 = this.molesP2FromR1 * this.product2Weight;\r\n\r\n      // calculate the grams used, remaining, and the sum of all masses\r\n      this.gramsUsed = (this.moleRatioR2toR1 * this.molesReactant1) * this.reactant2Weight;\r\n      this.gramsRemaining = this.grams2 - this.gramsUsed;\r\n      this.sumOfAll = (this.gramsRemaining + this.yieldProduct1 + this.yieldProduct2);\r\n\r\n      // set the limiting reactant to reactant 1\r\n      this.limitingReactant = this.reactant1;\r\n      this.nonLimitingReactant = this.reactant2;\r\n\r\n      // Set the String outputs so that the correct number of sigfigs can be used\r\n      this.gramsUsedOut = this.precision(this.gramsUsed);\r\n      this.gramsRemainingOut = this.precision(this.gramsRemaining);\r\n      \r\n      this.sumOfAllOut = this.precision(this.sumOfAll);\r\n\r\n      this.yieldProduct1Out = this.precision(this.yieldProduct1);\r\n      this.yieldProduct2Out = this.precision(this.yieldProduct2);\r\n\r\n    } else { // otherwise\r\n\r\n      // Calculate the mass yield\r\n      this.yieldProduct1 = this.molesP1FromR2 * this.product1Weight;\r\n      this.yieldProduct2 = this.molesP2FromR2 * this.product2Weight;\r\n\r\n      // calculate the grams used, remaining, and the sum of all masses\r\n      this.gramsUsed = (this.moleRatioR1toR2 * this.molesReactant2) * this.reactant1Weight;\r\n      this.gramsRemaining = this.grams1 - this.gramsUsed;\r\n      this.sumOfAll = (this.gramsRemaining + this.yieldProduct1 + this.yieldProduct2);\r\n\r\n      // set the limiting reactant\r\n      this.limitingReactant = this.reactant2;\r\n      this.nonLimitingReactant = this.reactant1;\r\n\r\n      // Set the String outputs so that the correct number of sigfigs can be used\r\n      this.gramsUsedOut = this.precision(this.gramsUsed);\r\n      this.gramsRemainingOut = this.precision(this.gramsRemaining);\r\n      \r\n      this.sumOfAllOut = this.precision(this.sumOfAll);\r\n\r\n      this.yieldProduct1Out = this.precision(this.yieldProduct1);\r\n      this.yieldProduct2Out = this.precision(this.yieldProduct2);\r\n      \r\n    }\r\n  }\r\n\r\n  // This method calculates the actual moles of the reactants\r\n  // NOTE: This is separate from saveProductmoles(), as it is necessary to calculate the limiting reactant, which is necessary to get the actual value of the reactant moles.\r\n  // tldr; more needed before product moles\r\n  public calculateMoles(): void {\r\n    \r\n    // Mole calculations of the reactants\r\n    this.molesReactant1 = this.grams1 / ((this.cation1Weight * this.reactant1CationSubscript) + (this.anion1Weight * this.reactant1AnionSubscript));\r\n    this.molesReactant2 = this.grams2 / ((this.cation2Weight * this.reactant2CationSubscript) + (this.anion2Weight * this.reactant2AnionSubscript));\r\n\r\n    // Mole *Potential* calculations of the products\r\n    // Product 1\r\n    this.molesP1FromR1 = this.molesReactant1 * this.moleRatioP1toR1;\r\n    this.molesP1FromR2 = this.molesReactant2 * this.moleRatioP1toR2;\r\n    // Product 2\r\n    this.molesP2FromR1 = this.molesReactant1 * this.moleRatioP2toR1;\r\n    this.molesP2FromR2 = this.molesReactant2 * this.moleRatioP2toR2;\r\n\r\n    // Set the String output variables so that the correct number of sigfigs can be used.\r\n    this.molesReactant1Out = this.precision(this.molesReactant1);\r\n    this.molesReactant2Out = this.precision(this.molesReactant2);\r\n\r\n    this.molesP1FromR1Out = this.precision(this.molesP1FromR1);\r\n    this.molesP1FromR2Out = this.precision(this.molesP1FromR2);\r\n    this.molesP2FromR1Out = this.precision(this.molesP2FromR1);\r\n    this.molesP2FromR2Out = this.precision(this.molesP2FromR2);\r\n  }\r\n\r\n  // This method is used to generate the strings using the percision\r\n  // required of a chemistry numbers app\r\n  private precision(value: Number): String {\r\n    // console.log(value.toPrecision(this.sigFigs));\r\n    return value.toPrecision(this.sigFigs);\r\n  }\r\n\r\n  // This method is a log method used purely to print out the current state of the class\r\n  // Any calls to this method are to be used only for debug purposes.\r\n  // It prints out ALL class-wide variables, and therefore floods the console when used.\r\n  // Please disable this method after debug is over.\r\n  public printVariablesDEBUG(): void {\r\n    \r\n    console.log(\"printVariablesDEBUG() called, printing answer-key.model.ts class variable values: \");\r\n    console.log();\r\n    \r\n    // Boolean data for searching purposes.\r\n    console.log(\"Display Key: \" + this.displayKey);\r\n    console.log(\"Find Solubility: \" + this.findSolubility);\r\n    console.log();\r\n\r\n    // Reactant 1\r\n    console.log(\"Anion 1: \" + this.anion1);\r\n    console.log(\"Cation 1: \" + this.cation1);\r\n    console.log(\"Grams 1: \" + this.grams1);\r\n    console.log();\r\n\r\n    // Reactant 2\r\n    console.log(\"Anion 2: \" + this.anion2);\r\n    console.log(\"Cation 2: \" + this.cation2);\r\n    console.log(\"Grams 2: \" + this.grams2);\r\n    console.log();\r\n\r\n    // Calculated Data\r\n    console.log(\"Cation 1 Weight: \" + this.cation1Weight);\r\n    console.log(\"Anion 1 Weight: \" + this.anion1Weight);\r\n    console.log(\"Cation 2 Weight: \" + this.cation2Weight);\r\n    console.log(\"Anion 2 Weight: \" + this.anion2Weight);\r\n    console.log();\r\n\r\n    // Charges of Ions\r\n    console.log(\"Cation 1 Charge: \" + this.cation1Charge);\r\n    console.log(\"Anion 1 Charge: \" + this.anion1Charge);\r\n    console.log(\"Cation 2 Charge: \" + this.cation2Charge);\r\n    console.log(\"Anion 2 Charge: \" + this.anion2Charge);\r\n    console.log();\r\n\r\n    // Coalesced Molecular Data (includes substrings, but not the solubility)\r\n    console.log(\"Reactant 1: \" + this.reactant1);\r\n    console.log(\"Reactant 2: \" + this.reactant2);\r\n    console.log(\"Product 1: \" + this.product1);\r\n    console.log(\"Product 2: \" + this.product2);\r\n    console.log();\r\n\r\n    // Reactant Subscripts\r\n    console.log(\"Reactant 1 Anion Subscript: \" + this.reactant1AnionSubscript);\r\n    console.log(\"Reactant 1 Cation Subscript: \" + this.reactant1CationSubscript);\r\n    console.log(\"Reactant 2 Anion Subscript: \" + this.reactant2AnionSubscript);\r\n    console.log(\"Reactant 2 Cation Subscript: \" + this.reactant2CationSubscript);\r\n    console.log();\r\n\r\n    // Product Subscripts\r\n    console.log(\"Product 1 Anion Subscript: \" + this.product1AnionSubscript);\r\n    console.log(\"Product 1 Cation Subscript: \" + this.product1CationSubscript);\r\n    console.log(\"Product 2 Anion Subscript: \" + this.product2AnionSubscript);\r\n    console.log(\"Product 2 Cation Subscript: \" + this.product2CationSubscript);\r\n    console.log();\r\n\r\n    // Reactant Coefficients\r\n    console.log(\"Reactant 1 Coefficient: \" + this.reactant1Coefficient);\r\n    console.log(\"Reactant 2 Coefficient: \" + this.reactant2Coefficient);\r\n    console.log();\r\n\r\n    // Product Coefficients\r\n    console.log(\"Product 1 Coefficient: \" + this.product1Coefficient);\r\n    console.log(\"Product 2 Coefficient: \" + this.product2Coefficient);\r\n    console.log();\r\n\r\n    // Formula Weights (Molar Mass)\r\n    // Reactants\r\n    console.log(\"Reactant 1 Formula Weight: \" + this.reactant1Weight);\r\n    console.log(\"Reactant 2 Formula Weight: \" + this.reactant2Weight);\r\n    console.log();\r\n\r\n    // Products\r\n    console.log(\"Product 1 Formula Weight: \" + this.product1Weight);\r\n    console.log(\"Product 2 Formula Weight: \" + this.product2Weight);\r\n    console.log();\r\n\r\n    // Mole Ratios of Products to Reactants\r\n    console.log(\"Mole Ratio Product 1 to Reactant 1: \" + this.moleRatioP1toR1);\r\n    console.log(\"Mole Ratio Product 1 to Reactant 2: \" + this.moleRatioP1toR2);\r\n    console.log(\"Mole Ratio Product 2 to Reactant 1: \" + this.moleRatioP2toR1);\r\n    console.log(\"Mole Ratio Product 2 to Reactant 2: \" + this.moleRatioP2toR2);\r\n    console.log();\r\n\r\n    // Reactant Mole Rations\r\n    console.log(\"Mole Ratio Reactant 1 to Reactant 2: \" + this.moleRatioR1toR2);\r\n    console.log(\"Mole Ratio Reactant 2 to Reactant 1: \" + this.moleRatioR2toR1);\r\n    console.log();\r\n\r\n    // Limiting Reactant Information\r\n    console.log(\"Limiting Reactant: \" + this.limitingReactant);\r\n    console.log(\"Non Limiting Reactant: \" + this.nonLimitingReactant);\r\n    console.log();\r\n\r\n    // Reaction Yeilds\r\n    console.log(\"Yield of Product 1: \" + this.yieldProduct1);\r\n    console.log(\"Yield of Product 2: \" + this.yieldProduct2);\r\n    console.log();\r\n\r\n    // Grams\r\n    console.log(\"Grams Used of Non Limiting Reactant: \" + this.gramsUsed);\r\n    console.log(\"Grams Remaining of Non Limiting Reactant: \" + this.gramsRemaining);\r\n    console.log(\"Sum of All: \" + this.sumOfAll);\r\n    console.log();\r\n\r\n    // Moles of each Reactant\r\n    console.log(\"Moles of Reactant 1: \" + this.molesReactant1);\r\n    console.log(\"Moles of Reactant 2: \" + this.molesReactant2);\r\n    console.log();\r\n    \r\n    // Potential moles of Products from each reactant\r\n    console.log(\"Moles of Product 1 from Reactant 1: \" + this.molesP1FromR1);\r\n    console.log(\"Moles of Product 1 from Reactant 2: \" + this.molesP1FromR2);\r\n    console.log(\"Moles of Product 2 from Reactant 1: \" + this.molesP2FromR1);\r\n    console.log(\"Moles of Product 2 from Reactant 2: \" + this.molesP2FromR2);\r\n    console.log();\r\n\r\n    // Solubility Data input\r\n    console.log(\"Cation 1 Solubility Data: \" + this.cation1SolubilityData);\r\n    console.log(\"Cation 2 Solubility Data: \" + this.cation2SolubilityData);\r\n    console.log();\r\n\r\n    // Saved Solubility Output\r\n    console.log(\"Reactant 1 Solubility: \" + this.reactant1Solubility);\r\n    console.log(\"Reactant 2 Solubility: \" + this.reactant2Solubility);\r\n    console.log(\"Product 1 Solubility: \" + this.product1Solubility);\r\n    console.log(\"Product 2 Solubility: \" + this.product2Solubility);\r\n    console.log();\r\n  }\r\n}\r\n","module.exports = \"<h1 align=\\\"center\\\">Chemistry Quiz Key Generator</h1>\\r\\n<h2 align=\\\"center\\\">Molarity Form</h2>\\r\\n\\r\\n<div>\\r\\n    Input a conjugate base-acid pair, volumes, and molarity values of each, then press \\\"Calculate\\\".\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-container\\\">\\r\\n  <form [formGroup]=\\\"formGroup\\\">\\r\\n    <select formControlName=\\\"base\\\">\\r\\n      <option *ngFor=\\\"let base of bases\\\" value=\\\"{{ base }}\\\">{{ base }}</option>\\r\\n    </select>\\r\\n    <input formControlName=\\\"baseVol\\\" placeholder=\\\"Volume of Base\\\">\\r\\n    <input formControlName=\\\"baseMol\\\" placeholder=\\\"Molarity of Base\\\">\\r\\n    <br><br>\\r\\n    <select formControlName=\\\"acid\\\">\\r\\n      <option *ngFor=\\\"let acid of acids\\\" value=\\\"{{ acid }}\\\">{{ acid }}</option>\\r\\n    </select>\\r\\n    <input formControlName=\\\"acidVol\\\" placeholder=\\\"Volume of Acid\\\">\\r\\n    <input formControlName=\\\"acidMol\\\" placeholder=\\\"Molarity of Acid\\\">\\r\\n    <br><br>\\r\\n    <button mat-raised-button (click)=\\\"calculate()\\\">Calculate</button>\\r\\n  </form>\\r\\n  <ng-container *ngIf=\\\"calculated\\\">\\r\\n    {{ limiter }} is the limiting reactant giving {{ mSalt }} moles, {{ gWater }} grams of water, and {{ gSalt }} grams of salt.\\r\\n  </ng-container>\\r\\n</div>\"","module.exports = \".form-container {\\n  display: flex;\\n  justify-content: space-around; }\\n\\nbody {\\n  padding-left: 25px; }\\n\\nh1 {\\n  padding-top: 15px;\\n  padding-left: 15px;\\n  padding-bottom: 20px;\\n  height: 50px;\\n  font-size: 3em;\\n  background-color: #1f881f;\\n  border-style: solid;\\n  border-color: black;\\n  background-image: url('gluick.png');\\n  background-repeat: no-repeat;\\n  background-position: left; }\\n\\ndiv {\\n  padding-left: 15px;\\n  padding-right: 10px;\\n  padding-top: 25px;\\n  padding-bottom: 25px;\\n  border-color: black;\\n  border-style: solid;\\n  background-color: #ecdfc6;\\n  font-size: 125%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9sYXJpdHkvQzpcXFVzZXJzXFxNYXR0aGV3XFxEZXNrdG9wXFxHaXRIdWJcXENoZW1RdWl6R2VuL3NyY1xcYXBwXFxtb2xhcml0eVxcbW9sYXJpdHkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFhO0VBQ2IsNkJBQTZCLEVBQUE7O0FBRWpDO0VBQ0ksa0JBQWtCLEVBQUE7O0FBRXRCO0VBQ0ksaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixvQkFBb0I7RUFFcEIsWUFBWTtFQUNaLGNBQWM7RUFDZCx5QkFBa0M7RUFDbEMsbUJBQW1CO0VBQ25CLG1CQUFtQjtFQUNuQixtQ0FBaUQ7RUFDakQsNEJBQTRCO0VBQzVCLHlCQUF5QixFQUFBOztBQUc3QjtFQUNJLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsaUJBQWlCO0VBQ2pCLG9CQUFvQjtFQUNwQixtQkFBbUI7RUFDbkIsbUJBQW1CO0VBQ25CLHlCQUFvQztFQUNwQyxlQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tb2xhcml0eS9tb2xhcml0eS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbn1cclxuYm9keXtcclxuICAgIHBhZGRpbmctbGVmdDogMjVweDtcclxufVxyXG5oMSB7XHJcbiAgICBwYWRkaW5nLXRvcDogMTVweDtcclxuICAgIHBhZGRpbmctbGVmdDogMTVweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xyXG5cclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIGZvbnQtc2l6ZTogM2VtO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDMxLCAxMzYsIDMxKVx0O1xyXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICAgIGJvcmRlci1jb2xvcjogYmxhY2s7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJhc3NldHMvaW1hZ2VzL2dsdWljay5wbmdcIik7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogbGVmdDtcclxufVxyXG5cclxuZGl2e1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG4gICAgcGFkZGluZy1yaWdodDogMTBweDtcclxuICAgIHBhZGRpbmctdG9wOiAyNXB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDI1cHg7XHJcbiAgICBib3JkZXItY29sb3I6IGJsYWNrO1xyXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMzYsIDIyMywgMTk4KTtcclxuICAgIGZvbnQtc2l6ZToxMjUlO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { ElementsService } from \"../services/elements.service\";\r\n\r\n@Component({\r\n  selector: 'app-molarity',\r\n  templateUrl: './molarity.component.html',\r\n  styleUrls: ['./molarity.component.scss']\r\n})\r\nexport class MolarityComponent implements OnInit {\r\n\r\n  constructor(private formBuilder: FormBuilder, private elements: ElementsService) {\r\n    this.createForm();\r\n  }\r\n  ngOnInit() {\r\n    //WM don't think we need anything here, on the other document, this is pulling outside information to this page,\r\n    //and all the data needed is self contained.\r\n  }\r\n\r\n  private formGroup: FormGroup = new FormGroup({\r\n    base: new FormControl(),\r\n    baseVol: new FormControl(),\r\n    baseMol: new FormControl(),\r\n    acid: new FormControl(),\r\n    acidVol: new FormControl(),\r\n    acidMol: new FormControl()\r\n  });\r\n\r\n  public bases: any = [\r\n    \"Cl\",\r\n    \"Br\",\r\n    \"F\",\r\n    \"I\",\r\n    \"NO3\",\r\n    \"ClO\",\r\n    \"SO4\",\r\n    \"PO4\"\r\n  ];\r\n  public acids: any = [\r\n    'Na',\r\n    'K',\r\n    'Rb',\r\n    'Li',\r\n    'Mg',\r\n    'Ca',\r\n    'Al'\r\n  ];\r\n\r\n  public calculate(): void {\r\n    var ConjugateBase = this.formGroup.get(\"base\").value;\r\n    var ConjugateAcid = this.formGroup.get(\"acid\").value;\r\n    var volR1 = this.formGroup.get(\"baseVol\").value;\r\n    var volR2 = this.formGroup.get(\"baseMol\").value;\r\n    var molR1 = this.formGroup.get(\"acidVol\").value;\r\n    var molR2 = this.formGroup.get(\"acidMol\").value;\r\n\r\n    //discover Acid\r\n    var acid, base;\r\n\r\n    switch (ConjugateBase) {\r\n      case \"Cl\": acid = \"HCl\"; break;\r\n      case \"Br\": acid = \"HBr\"; break;\r\n      case \"F\": acid = \"HF\"; break;\r\n      case \"I\": acid = \"HI\"; break;\r\n      case \"NO3\": acid = \"HNO3\"; break;\r\n      case \"ClO\": acid = \"HClO\"; break;\r\n      case \"SO4\": acid = \"H2SO4\"; break;\r\n      case \"PO4\": acid = \"H3PO4\"; break;\r\n    }\r\n    //debug, activate if needed\r\n    /*\r\n    console.log(ConjugateBase, acid);\r\n     */\r\n    //discover Base\r\n    switch (ConjugateAcid) {\r\n      case 'Na': base = 'NaOH'; break;\r\n      case 'K': base = 'KOH'; break;\r\n      case 'Rb': base = 'RbOH'; break;\r\n      case 'Li': base = 'LiOH'; break;\r\n      case 'Mg': base = 'Mg(OH)2'; break;\r\n      case 'Ca': base = 'Ca(OH)2'; break;\r\n      case 'Al': base = 'Al(OH)3'; break;\r\n    }\r\n    //debug, activate if needed\r\n    /*\r\n    console.log(ConjugateAcid, base;\r\n     */\r\n    var water = [];\r\n\r\n    switch (acid) {\r\n      case \"HCl\": water.push(1); break;\r\n      case \"HBr\": water.push(1); break;\r\n      case \"HF\": water.push(1); break;\r\n      case \"HI\": water.push(1); break;\r\n      case \"HNO3\": water.push(1); break;\r\n      case \"HClO\": water.push(1); break;\r\n      case \"H2SO4\": water.push(2); break;\r\n      case \"H3PO4\": water.push(3); break;\r\n    }\r\n    //debug, activate if needed\r\n    /*\r\n    console.log(acid, water[]);\r\n     */\r\n    switch (base) {\r\n      case \"NaOH\": water.push(1); break;\r\n      case \"KOH\": water.push(1); break;\r\n      case \"RbOH\": water.push(1); break;\r\n      case \"LiOH\": water.push(1); break;\r\n      case \"Mg(OH)2\": water.push(2); break;\r\n      case \"Ca(OH)2\": water.push(2); break;\r\n      case \"Al(OH)3\": water.push(3); break;\r\n    }\r\n    //debug, activate if needed\r\n    /*\r\n    console.log(base, water[]);\r\n     */\r\n    var cation;\r\n    if (base.indexOf(\"(OH)3\") != -1) {\r\n      cation = base.substring(0, base.indexOf(\"(OH)3\"))\r\n    }\r\n    if (base.indexOf(\"(OH)2\") != -1) {\r\n      cation = base.substring(0, base.indexOf(\"(OH)2\"))\r\n    }\r\n    if (base.indexOf(\"OH\") != -1) {\r\n      cation = base.substring(0, base.indexOf(\"OH\"))\r\n    }\r\n    if (base.indexOf(\"OH\") != -1) {\r\n      cation = base.substring(0, base.indexOf(\"OH)\"))\r\n    }\r\n    switch (acid) {\r\n      case \"HCl\": water.push(\"Cl\"); break;\r\n      case \"HBr\": water.push(\"Br\"); break;\r\n      case \"HF\": water.push(\"F\"); break;\r\n      case \"HI\": water.push(\"I\"); break;\r\n      case \"HNO3\": water.push(\"NO3\"); break;\r\n      case \"HClO\": water.push(\"ClO\"); break;\r\n      case \"H2SO4\": water.push(\"SO4\"); break;\r\n      case \"H3PO4\": water.push(\"PO4\"); break;\r\n    }\r\n    if (water[0] > water[1]) {\r\n      var acidCoeff = 1;\r\n      var baseCoeff = water[0] / water[1];\r\n      var saltCoeff = acidCoeff;\r\n      var waterCoeff = baseCoeff;\r\n      water.push(acidCoeff);\r\n      water.push(baseCoeff);\r\n      water.push(saltCoeff);\r\n      water.push(waterCoeff);\r\n    } else if (water[0] < water[1]) {\r\n      var acidCoeff = water[1] / water[0];\r\n      var baseCoeff = 1;\r\n      var saltCoeff = baseCoeff;\r\n      var waterCoeff = acidCoeff;\r\n      water.push(acidCoeff);\r\n      water.push(baseCoeff);\r\n      water.push(saltCoeff);\r\n      water.push(waterCoeff);\r\n    } else {\r\n      water.push(water[0] / water[1]);\r\n      water.push(1);\r\n      water.push(1);\r\n      water.push(1);\r\n      water.push(1);\r\n    }\r\n\r\n    if (water[6] == 1.5) {\r\n      water[6] = 4 * water[6];\r\n      water[5] = water[5];\r\n      water[4] = 2 * water[4];\r\n      water[3] = 2 * water[3];\r\n    }\r\n\r\n    //output this properly later with proper formating\r\n    //console.log(\"The balanced reactions is: \\n\\n {0}{1}  + {2}{3} --> {6}{4}{2}{5}{0} + {7}H2O\" .format(water[3], Acid, water[4], Base, cation, water[2],water[5], water[6] )) # --> {}{}{}{}   +  H2O\"\r\n\r\n    molR1 = molR1 * volR1 / 1000;\r\n    molR2 = molR2 * volR2 / 1000;\r\n\r\n    var molSaltGivenR1 = molR1 * water[5] / water[3];\r\n    var molWaterGivenR1 = molR1 * water[6] / water[3];\r\n    var molSaltGivenR2 = molR2 * water[5] / water[4];\r\n    var molWaterGivenR2 = molR2 * water[6] / water[4];\r\n\r\n    var atomic_weights = {\r\n      \"He\": 4.002, \"Li\": 6.94, \"Be\": 9.012,\r\n      \"B\": 10.81, \"C\": 12.011, \"N\": 14.007, \"O\": 15.999, \"F\": 19.00,\r\n      \"Ne\": 20.1797, \"Na\": 22.989, \"Mg\": 24.305, \"Al\": 26.981, \"Si\": 28.085,\r\n      \"P\": 30.973, \"S\": 32.06, \"Cl\": 35.45, \"Ar\": 39.948, \"K\": 39.0983, \"Ca\": 40.078,\r\n      \"Sc\": 44.955, \"Ti\": 47.867, \"V\": 50.941, \"Cr\": 51.996, \"Mn\": 54.938, \"Fe\": 55.845,\r\n      \"Co\": 58.933, \"Ni\": 58.693, \"Cu\": 63.546, \"Zn\": 65.38, \"Ga\": 69.723, \"Ge\": 72.630,\r\n      \"As\": 74.921, \"Se\": 78.971, \"Br\": 79.904, \"Kr\": 83.798, \"Rb\": 85.4678, \"Sr\": 87.62,\r\n      \"Y\": 88.905, \"Zr\": 91.224, \"Nb\": 92.906, \"Mo\": 95.95, \"Tc\": 97, \"Ru\": 101.07, \"Rh\": 102.905,\r\n      \"Pd\": 106.42, \"Ag\": 107.868, \"Cd\": 112.414, \"In\": 114.818, \"Sn\": 118.710, \"Sb\": 121.760, \"Te\": 127.760,\r\n      \"I\": 126.904, \"Xe\": 131.293, \"Cs\": 132.905, \"Ba\": 137.327, \"La\": 138.905, \"Ce\": 140.116, \"Pr\": 140.907,\r\n      \"Nd\": 144.242, \"Pm\": 145, \"Sm\": 150.36, \"Eu\": 151.964, \"Gd\": 157.25, \"Tb\": 158.925, \"Dy\": 162.500, \"Ho\": 164.930,\r\n      \"Er\": 167.259, \"Tm\": 168.934, \"Yb\": 173.045, \"Lu\": 174.9668, \"Hf\": 178.49, \"Ta\": 180.947, \"W\": 183.84, \"Re\": 186.207,\r\n      \"Os\": 190.23, \"Ir\": 192.21, \"Pt\": 195.084, \"Au\": 196.966, \"Hg\": 200.592, \"Tl\": 204.38, \"Pb\": 207.2, \"Bi\": 208.980,\r\n      \"Po\": 209, \"At\": 210, \"Rn\": 222, \"Fr\": 223, \"Ra\": 222, \"Ac\": 227, \"Th\": 232.0377, \"Pa\": 231.035, \"U\": 238.028, \"(NO3)\": 62.00,\r\n      \"O2\": 32.00, \"(CO3)\": 60.01, \"(ClO3)\": 83.447, \"OH\": 17.01, \"(PO4)\": 94.9714, \"SO4\": 96.06, \"(Cr2O7)\": 215.985, \"(NH4)\": 18.00\r\n    };\r\n\r\n    var formula_weight_acid = water[0] * 1.008 + atomic_weights[ConjugateBase]\r\n    var formula_weight_base = water[1] * atomic_weights[\"OH\"] + atomic_weights[ConjugateAcid]\r\n    var formula_weight_water = 2 * 1.008 + 15.999\r\n    var formula_weight_salt = water[1] * atomic_weights[ConjugateBase] + water[0] * atomic_weights[ConjugateAcid]\r\n    console.log(formula_weight_acid)\r\n    console.log(formula_weight_base)\r\n    console.log(formula_weight_water)\r\n    console.log(formula_weight_salt)\r\n\r\n    if (molSaltGivenR1 < molSaltGivenR2) {\r\n      this.limiter = acid;\r\n      this.mSalt = molSaltGivenR1;\r\n      this.gSalt = molSaltGivenR2 * formula_weight_salt;\r\n      //print(\"{} is the limiting reactant giving {} moles and {} grams of salt\". format(Acid,mol_salt_given_R1, grams_of_salt))\r\n    } else {\r\n      this.limiter = base;\r\n      this.mSalt = molSaltGivenR2;\r\n      this.gSalt = molSaltGivenR2 * formula_weight_salt;\r\n      //print(\"{} is the limiting reactant giving {} moles and {} grams of salt\". format(Base,mol_salt_given_R2, grams_of_salt))\r\n    }\r\n    if (molWaterGivenR1 < molWaterGivenR1) {\r\n      this.limiter = acid;\r\n      this.mWater = molWaterGivenR1;\r\n      this.gWater = molWaterGivenR1 * formula_weight_water;\r\n      //print(\"{} is the limiting reactant giving {} moles and {} grams of water\". format(Acid,mol_water_given_R1, grams_of_water))\r\n    } else {\r\n      this.limiter = base;\r\n      this.mWater = molWaterGivenR2;\r\n      this.gWater = molWaterGivenR2 * formula_weight_water;\r\n      //print(\"{} is the limiting reactant giving {} moles and {} grams of water\". format(Base,mol_water_given_R2, grams_of_water))\r\n    }\r\n\r\n    this.calculated = true;\r\n  }\r\n\r\n  public limiter: any;\r\n  public gSalt: any;\r\n  public mSalt: any;\r\n  public gWater: any;\r\n  public mWater: any;\r\n  public calculated: boolean = false;\r\n\r\n  private createForm(): void {\r\n    this.formGroup = this.formBuilder.group({\r\n      base: [\"SO4\"],\r\n      baseVol: '',\r\n      baseMol: '',\r\n      acid: [\"Na\"],\r\n      acidVol: '',\r\n      acidMol: ''\r\n    });\r\n  }\r\n\r\n  private simpleTest1(): void {\r\n    if (ConjugateBase == \"S04\" && ConjugateAcid == \"Na\") {\r\n      if (grams_of_salt != 0.1775475)\r\n        console.log(\"Error, proper number not reached\")\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ElementsService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public getCations() {\r\n  //  return this.http.get('http://localhost:4000/cations');\r\n    return this.http.get('assets/UpdatedCationsTest.json');\r\n\r\n  }\r\n\r\n  public getAnions() {\r\n    //return this.http.get('http://localhost:4000/anions');\r\n    return this.http.get('assets/UpdatedAnionsTest.json');\r\n\r\n  }\r\n\r\n  // This is to grab data that is in a test format so that we can verify different setups.\r\n  public getSolubilityTest() {\r\n    //return this.http.get('http://localhost:4000/solubility1');\r\n    return this.http.get('assets/SolubilityTest.json');\r\n  }\r\n\r\n  public getSolubility() {\r\n    //return this.http.get('http://localhost:4000/solubility');\r\n    return this.http.get('assets/SolubilityTest2.json');\r\n  }\r\n}\r\n","module.exports = \"<h1 align=\\\"center\\\">Chemistry Quiz Key Generator</h1>\\r\\n<h2 align=\\\"center\\\">Stoichiometry Form</h2>\\r\\n\\r\\n<div>\\r\\n  At the moment, this program calculates stoichiometry, to be used in limiting-reactant problems, involving monoatomic\\r\\n  and\\r\\n  polyatomic ions peforming replacement reactions. Input the data into the form and click Calculate to generate the\\r\\n  answer key.\\r\\n  (Combustion and gas-evolution reactions using metals and acids may be added in a future update.)\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-container\\\">\\r\\n  <form [formGroup]=\\\"formGroup\\\">\\r\\n    <select formControlName=\\\"cation1\\\">\\r\\n      <option *ngFor=\\\"let cation of cations\\\" value=\\\"{{ cation.symbol }}\\\">{{ cation.symbol }}</option>\\r\\n    </select>\\r\\n    <select formControlName=\\\"anion1\\\">\\r\\n      <option *ngFor=\\\"let anion of anions\\\" value=\\\"{{ anion.symbol }}\\\">{{ anion.symbol }}</option>\\r\\n    </select>\\r\\n    <input formControlName=\\\"grams1\\\" placeholder=\\\"Grams of First Compound\\\">\\r\\n    <br><br>\\r\\n    <select formControlName=\\\"cation2\\\">\\r\\n      <option *ngFor=\\\"let cation of cations\\\" value=\\\"{{ cation.symbol }}\\\">{{ cation.symbol }}</option>\\r\\n    </select>\\r\\n    <select formControlName=\\\"anion2\\\">\\r\\n      <option *ngFor=\\\"let anion of anions\\\" value=\\\"{{ anion.symbol }}\\\">{{ anion.symbol }}</option>\\r\\n    </select>\\r\\n    <input formControlName=\\\"grams2\\\" placeholder=\\\"Grams of Second Compound\\\">\\r\\n    <br><br>\\r\\n    <button mat-raised-button (click)=\\\"setAnswerKey()\\\">Calculate</button>\\r\\n  </form>\\r\\n  <app-answer-key [answer]=\\\"answer\\\"></app-answer-key>\\r\\n  \\r\\n  <ng-container *ngIf=\\\"answer.displayKey\\\"> \\r\\n    Calculate the limiting reactant, excess reactant and theoretical yield in grams when:\\r\\n    {{ answer.grams1 }} g of {{ answer.reactant1 }} reacts with {{ answer.grams2 }} g of {{ answer.reactant2 }}\\r\\n     according to the following equation: <ng-container *ngIf=\\\"answer.reactant1Coefficient > 1\\\">{{ answer.reactant1Coefficient }}</ng-container>{{ answer.reactant1 }}{{ answer.reactant1Solubility }} + <ng-container *ngIf=\\\"answer.reactant2Coefficient > 1\\\">{{ answer.reactant2Coefficient }}</ng-container>{{ answer.reactant2 }}{{ answer.reactant2Solubility }} => <ng-container *ngIf=\\\"answer.product1Coefficient > 1\\\">{{ answer.product1Coefficient }}</ng-container>{{ answer.product1 }}{{ answer.product1Solubility }} + <ng-container *ngIf=\\\"answer.product2Coefficient > 1\\\">{{ answer.product2Coefficient }}</ng-container>{{ answer.product2 }}{{ answer.product2Solubility }}</ng-container>\\r\\n</div>\\r\\n\"","module.exports = \".form-container {\\n  display: flex;\\n  justify-content: space-around; }\\n\\nbody {\\n  padding-left: 25px; }\\n\\nh1 {\\n  padding-top: 15px;\\n  padding-left: 15px;\\n  padding-bottom: 20px;\\n  height: 50px;\\n  font-size: 3em;\\n  background-color: #1f881f;\\n  border-style: solid;\\n  border-color: black;\\n  background-image: url('gluick.png');\\n  background-repeat: no-repeat;\\n  background-position: left; }\\n\\ndiv {\\n  padding-left: 15px;\\n  padding-right: 10px;\\n  padding-top: 25px;\\n  padding-bottom: 25px;\\n  border-color: black;\\n  border-style: solid;\\n  background-color: #ecdfc6;\\n  font-size: 125%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3RvaWNoaW9tZXRyeS1mb3JtL0M6XFxVc2Vyc1xcTWF0dGhld1xcRGVza3RvcFxcR2l0SHViXFxDaGVtUXVpekdlbi9zcmNcXGFwcFxcc3RvaWNoaW9tZXRyeS1mb3JtXFxzdG9pY2hpb21ldHJ5LWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFhO0VBQ2IsNkJBQTZCLEVBQUE7O0FBRWpDO0VBQ0ksa0JBQWtCLEVBQUE7O0FBRXRCO0VBQ0ksaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixvQkFBb0I7RUFFcEIsWUFBWTtFQUNaLGNBQWM7RUFDZCx5QkFBa0M7RUFDbEMsbUJBQW1CO0VBQ25CLG1CQUFtQjtFQUNuQixtQ0FBaUQ7RUFDakQsNEJBQTRCO0VBQzVCLHlCQUF5QixFQUFBOztBQUc3QjtFQUNJLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsaUJBQWlCO0VBQ2pCLG9CQUFvQjtFQUNwQixtQkFBbUI7RUFDbkIsbUJBQW1CO0VBQ25CLHlCQUFvQztFQUNwQyxlQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zdG9pY2hpb21ldHJ5LWZvcm0vc3RvaWNoaW9tZXRyeS1mb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxufVxyXG5ib2R5e1xyXG4gICAgcGFkZGluZy1sZWZ0OiAyNXB4O1xyXG59XHJcbmgxIHtcclxuICAgIHBhZGRpbmctdG9wOiAxNXB4O1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDIwcHg7XHJcblxyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgZm9udC1zaXplOiAzZW07XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMzEsIDEzNiwgMzEpXHQ7XHJcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gICAgYm9yZGVyLWNvbG9yOiBibGFjaztcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImFzc2V0cy9pbWFnZXMvZ2x1aWNrLnBuZ1wiKTtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBsZWZ0O1xyXG59XHJcblxyXG5kaXZ7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xyXG4gICAgcGFkZGluZy10b3A6IDI1cHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMjVweDtcclxuICAgIGJvcmRlci1jb2xvcjogYmxhY2s7XHJcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzNiwgMjIzLCAxOTgpO1xyXG4gICAgZm9udC1zaXplOjEyNSU7XHJcbn1cclxuIl19 */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\r\n\r\nimport { AnswerKey } from '../models/answer-key.model';\r\nimport { ElementsService } from '../services/elements.service';\r\n//import { timingSafeEqual } from 'crypto';\r\n\r\n@Component({\r\n  selector: 'app-stoichiometry-form',\r\n  templateUrl: './stoichiometry-form.component.html',\r\n  styleUrls: ['./stoichiometry-form.component.scss']\r\n})\r\nexport class StoichiometryFormComponent implements OnInit {\r\n\r\n  // @Input needed so answer can be seen by both components\r\n  // here, we create the new answer key object in order for it to be filled.\r\n  @Input() private answer: AnswerKey = new AnswerKey();\r\n\r\n  // Declares form group attached to form\r\n  private formGroup: FormGroup = new FormGroup({\r\n    cation1: new FormControl(),\r\n    anion1: new FormControl(),\r\n    grams1: new FormControl(),\r\n    cation2: new FormControl(),\r\n    anion2: new FormControl(),\r\n    grams2: new FormControl()\r\n  });\r\n\r\n  private anions: any = [];\r\n  private cations: any = [];\r\n  private solubilityTest: any = [];\r\n\r\n  constructor(private formBuilder: FormBuilder, private elements: ElementsService) {\r\n    this.createForm();\r\n   }\r\n\r\n  ngOnInit() {\r\n    // Tells the elements object to retrieve the anion data and save it to this.cations\r\n    this.elements.getAnions().subscribe(anions => {\r\n      this.anions = anions;\r\n    });\r\n\r\n    // Tells the elements object to retrieve the cation data and save it to this.cations\r\n    this.elements.getCations().subscribe(cations => {\r\n      this.cations = cations;\r\n    });\r\n\r\n    // Tells the elements object to retrieve the solubility test data and save it to this.solubilityTest\r\n    this.elements.getSolubilityTest().subscribe(solubilityTest => {\r\n      this.solubilityTest = solubilityTest;\r\n    });\r\n  }\r\n\r\n  // Gets the form input and sets the answer key properties\r\n  private setAnswerKey(): void {\r\n    // Gets symbol, weight and charge of anion1\r\n    this.answer.anion1 = this.formGroup.get('anion1').value;\r\n    for (let i = 0; i < this.anions.length; i++) {\r\n      if (this.answer.anion1 === this.anions[i].symbol) {\r\n        this.answer.anion1Weight = this.anions[i].mass;\r\n        this.answer.anion1Charge = this.anions[i].charge;\r\n        this.answer.anion1Polyatomic = this.anions[i].polyatomic;\r\n      }\r\n    }\r\n\r\n    // Gets symbol, weight and charge of cation1\r\n    this.answer.cation1 = this.formGroup.get('cation1').value;\r\n    for (let i = 0; i < this.cations.length; i++) {\r\n      if (this.answer.cation1 === this.cations[i].symbol) {\r\n        this.answer.cation1Weight = this.cations[i].mass;\r\n        this.answer.cation1Charge = this.cations[i].charge;\r\n        this.answer.cation1Polyatomic = this.cations[i].polyatomic;\r\n      }\r\n    }\r\n    this.answer.grams1 = this.formGroup.get('grams1').value;\r\n\r\n    // Gets symbol, weight and charge of anion2\r\n    this.answer.anion2 = this.formGroup.get('anion2').value;\r\n    for (let i = 0; i < this.anions.length; i++) {\r\n      if (this.answer.anion2 === this.anions[i].symbol) {\r\n        this.answer.anion2Weight = this.anions[i].mass;\r\n        this.answer.anion2Charge = this.anions[i].charge;\r\n        this.answer.anion2Polyatomic = this.anions[i].polyatomic;\r\n      }\r\n    }\r\n\r\n    // Gets symbol, weight and charge of cation2\r\n    this.answer.cation2 = this.formGroup.get('cation2').value;\r\n    for (let i = 0; i < this.cations.length; i++) {\r\n      if (this.answer.cation2 === this.cations[i].symbol) {\r\n        this.answer.cation2Weight = this.cations[i].mass;\r\n        this.answer.cation2Charge = this.cations[i].charge;\r\n        this.answer.cation2Polyatomic = this.cations[i].polyatomic;\r\n      }\r\n    }\r\n    this.answer.grams2 = this.formGroup.get('grams2').value;\r\n\r\n    // Saves the cation1 solubility if it can find it ( sets find solubility to false otherwise, defaulting to no display )\r\n    if(this.solubilityTest[this.answer.cation1 + ''] === null) {\r\n      this.answer.findSolubility = false;\r\n    } else {\r\n\r\n      // Saves the data\r\n      this.answer.cation1SolubilityData = this.solubilityTest[this.answer.cation1 + ''];\r\n\r\n      // Saves the cation2 solubility data if it can find it, sets the findSolubility variable to false otherwise, not loading solubility data then.\r\n      if(this.solubilityTest[this.answer.cation2 + ''] === null) {\r\n        this.answer.findSolubility = false;\r\n      } else {\r\n\r\n        // Saves the data\r\n        this.answer.cation2SolubilityData = this.solubilityTest[this.answer.cation2 + ''];\r\n      }\r\n    }\r\n\r\n    /* Debug, add/remove a space in the * / here to enable/disable the code -> * /\r\n    console.log(\"Solubility Test: \" + this.solubilityTest);\r\n    console.log(\"Beginning Solubility Generation\");\r\n    /* */\r\n\r\n    // Loads the solubility\r\n    this.answer.solubilityGeneration();\r\n\r\n    /* Debug, add/remove the * / here to enable/disable the code -> * /\r\n    console.log(\"The following data is printed for debug purposes, please disable this block in stoichiometry-form.component.ts if you are not debugging the system.\");\r\n    console.log(\"Finished gathering data from form\");\r\n    /* */\r\n    // calculate the subscripts\r\n    this.answer.determineSubscript();\r\n\r\n    /* Debug, add/remove the * / here to enable/disable the code -> * /\r\n    console.log(\"The following data is printed for debug purposes, please disable this block in stoichiometry-form.component.ts if you are not debugging the system.\");\r\n    console.log(\"Finished determineSubscript()\");\r\n    /* */\r\n\r\n    // calculate the coefficients\r\n    this.answer.balanceEquation();\r\n\r\n    /* Debug, add/remove the * / here to enable/disable the code -> * /\r\n    console.log(\"The following data is printed for debug purposes, please disable this block in stoichiometry-form.component.ts if you are not debugging the system.\");\r\n    console.log(\"Finished balanceEquation()\");\r\n    /* */\r\n\r\n    // put together the molecules (using subscripts)\r\n    this.answer.setMolecules();\r\n\r\n    /* Debug, add/remove the * / here to enable/disable the code -> * /\r\n    console.log(\"The following data is printed for debug purposes, please disable this block in stoichiometry-form.component.ts if you are not debugging the system.\");\r\n    console.log(\"Finished setMolecules()\");\r\n    /* */\r\n\r\n    // calculate the formula weights (molar masses)\r\n    this.answer.calculateFormulaWeight();\r\n\r\n    // calculate the molar ratios of everything\r\n    this.answer.calculateMoleRatios();\r\n\r\n    // calculates actual moles of everything\r\n    this.answer.calculateMoles();\r\n\r\n    // determines the limiting reactant\r\n    this.answer.determineLimitingReactant();\r\n\r\n    // Prints all variables stored in answer into the console. DEBUG COMMAND, PLEASE COMMENT OUT IF NOT IN USE\r\n    // this.answer.printVariablesDEBUG();\r\n\r\n    // display the answer key\r\n    this.answer.displayKey = true;\r\n\r\n    // TODO: add functionality to update HTML file here.\r\n    \r\n\r\n    // this.answer.stoichiometryGeneration();\r\n    // this.answer.molecularNotationGeneration();\r\n\r\n    /* Debug, add/remove the * / here to enable/disable the code -> * /\r\n    console.log(\"The following data is printed for debug purposes, please disable this block in stoichiometry-form.component.ts if you are not debugging the system.\");\r\n    console.log(\"Cations: \" + this.cations);\r\n    console.log(\"Anions: \" + this.anions);\r\n    console.log(\"Cation 1: \" + this.answer.cation1);\r\n    console.log(\"Anion 1: \" + this.answer.anion1);\r\n    console.log(\"Grams 1: \" + this.answer.grams1);\r\n    console.log(\"Cation 2: \" + this.answer.cation2);\r\n    console.log(\"Anion 2: \" + this.answer.anion2);\r\n    console.log(\"Grams 2: \" + this.answer.grams2);\r\n    /**/\r\n  }\r\n\r\n  // Creates the form and sets default prioperties\r\n  private createForm(): void {\r\n    this.formGroup = this.formBuilder.group({\r\n      cation1: ['Li'],\r\n      anion1: ['Br'],\r\n      grams1: '',\r\n      cation2: ['Na'],\r\n      anion2: ['I'],\r\n      grams2: ''\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\r\n"],"sourceRoot":""}